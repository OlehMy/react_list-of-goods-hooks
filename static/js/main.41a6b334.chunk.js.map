{"version":3,"sources":["App.tsx","components/GoodsItem/GoodsItem.tsx","components/GoodsList/GoodList.tsx","index.tsx"],"names":["SortType","GoodsItem","label","GoodList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","sort","prevGood","currentGood","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAsBJ,MAAOI,GAAbA,WFLXC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAMQ,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAgCF,mBAAST,EAASY,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMV,EAlDD,SACLA,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOX,GAqBzB,OAnBIS,GACFE,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQL,GACN,KAAKb,EAASmB,QACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKlB,EAASqB,OACZ,OAAOJ,EAASK,OAASJ,EAAYI,OAEvC,QACE,OAAO,MAKXZ,GACFK,EAAaQ,UAGRR,EAyBOS,CACZjB,EACA,CAAEM,WAAUH,eAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYd,IAAab,EAASmB,UAEtCS,QAhCqB,WAC3Bd,EAAYd,EAASmB,UAwBjB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYd,IAAab,EAASqB,SAEtCO,QAxCmB,WACzBd,EAAYd,EAASqB,SAgCjB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAhDc,WACpBjB,GAAeD,IAwCX,sBAYGA,GAAcG,IAAab,EAASY,OACrC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QArDU,WAClBd,EAAYd,EAASY,MACrBD,GAAc,IAgDR,sBAUJ,cAAC,EAAD,CAAUP,MAAOA,QGpIvByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.41a6b334.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((prevGood, currentGood) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return prevGood.localeCompare(currentGood);\n\n        case SortType.LENGTH:\n          return prevGood.length - currentGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleSortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={handleSortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        { (isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={goods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  label: string\n};\n\nexport const GoodsItem: React.FC<Props> = ({ label }) => (\n  <li data-cy=\"Good\">{label}</li>\n);\n","import React from 'react';\nimport { GoodsItem } from '../GoodsItem';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    <ul>\n      {goods.map(good => (\n        <GoodsItem key={good} label={good} />\n      ))}\n    </ul>\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}